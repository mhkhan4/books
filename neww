public void GenerateAccountIndexes(List<Account> accounts, string mtbToken)
        {
            for (var x = 0; x < accounts.Count; x++)
            {
                accounts[x].Index = x + 1;
            }
        }



  @Override
  public Mono<ResponseEntity<List<Account>>> getAccountSummary(String cbaToken, AccountsFilter filter, String corrId) {
    //todo: throw exception on receiving empty list??

    AccountSummary accountSummary = new AccountSummary();
    accountsRepository.getAccounts(cbaToken, String.valueOf(corrId))
            .flatMap(responseEntity->
                    List<Account> accountList = responseEntity.getBody();
            for(account: accountList){
              if(checkingAccounts.contains(account.getProductCode)){
                
              }
            }
                    )

  }




@Data
@SuperBuilder
@NoArgsConstructor
@AllArgsConstructor
public class Account {
    @JsonIgnore
    private String cbsAccountKey;
    private AccountKey accountKey;
    private String subProductCode;
    private String accountName;
    private String accountNickName;
    private String accountCategory;
    private String accountNumber;
    private String accountTypeOfx;
    private String rtn;
    private String productCode;
    private int accountIndex;
    private String name;

}


@Data
@SuperBuilder
public class CheckingAccount extends Account{

}


@Data
@SuperBuilder
@NoArgsConstructor
@AllArgsConstructor
public class CreditAccount extends Account{
    private String embossing;
    private String relCode;

}


@Data
@SuperBuilder
@NoArgsConstructor
public class InvestmentAccount extends Account{
}


@Data
@SuperBuilder
public class LoanAccount extends Account{
}

