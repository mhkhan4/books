package com.mtb.vlp.policy.exceptions;

public class BadUserRequestException extends RuntimeException {
  private final StandardizedExceptions.ErrorCodeEnum errorCode;
  private final Object[] messageParameters;

  public BadUserRequestException(StandardizedExceptions.ErrorCodeEnum errorCode) {
    super(StandardizedExceptions.cleanupParameterlessMessage(errorCode.getErrorMessage()));
    this.errorCode = errorCode;
    this.messageParameters = new Object[] {};
  }

  public BadUserRequestException(
      StandardizedExceptions.ErrorCodeEnum errorCode, Object... messageParameters) {
    super(String.format(errorCode.getErrorMessage(), messageParameters));
    this.errorCode = errorCode;
    this.messageParameters = messageParameters;
  }

  public BadUserRequestException(StandardizedExceptions.ErrorCodeEnum errorCode, Throwable cause) {
    super(StandardizedExceptions.cleanupParameterlessMessage(errorCode.getErrorMessage()), cause);
    this.errorCode = errorCode;
    this.messageParameters = new Object[] {};
  }

  public BadUserRequestException(
      StandardizedExceptions.ErrorCodeEnum errorCode,
      Throwable cause,
      Object... messageParameters) {
    super(String.format(errorCode.getErrorMessage(), messageParameters), cause);
    this.errorCode = errorCode;
    this.messageParameters = messageParameters;
  }

  public StandardizedExceptions.ErrorCodeEnum getErrorCode() {
    return errorCode;
  }

  public Object[] getMessageParameters() {
    return messageParameters;
  }
}
