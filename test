import {Injectable} from '@angular/core';
import {HttpClient, HttpHeaders} from '@angular/common/http';
import {map, mergeMap, shareReplay} from 'rxjs/operators';
import {environment} from "../../../environments/environment";
import {User} from 'src/app/models/user';
import {Observable, of} from 'rxjs';
import {MockUsers} from 'src/app/mock/mock-user';
import {SessionService} from '../session/session.service';
import { UserBadge } from 'src/app/models/userBadge';

@Injectable({
  providedIn: 'root'
})
export class UserService {

  private userId:string = "";

  constructor(private httpService: HttpClient, private sessionService: SessionService) {
  }

  getMockUserProfile(id: string) {
    return of(MockUsers.find(x => String(x.id) == id)).pipe(
      map((response: any) => {
          return {
            id: response.id,
            firstName: response.firstName,
            lastName: response.lastName,
            email: response.email,
            position: response.position,
          } as User;
        }
      )
    );
  }

  getUserProfile(id: string) {
    return this.httpService.get(`${environment.backendURI}/api/v2/user/${id}/profile`)
      .pipe(
        map((response: any) => {
            return {
              id: response.id,
              firstName: response.firstName,
              lastName: response.lastName,
              email: response.email,
              position: response.position,
            } as User;
          }
        )
      );
  }

  getUserFullName(): Observable<string> {
    return (this.sessionService.getCurrentUser()
        .pipe(
          mergeMap(userId => this.getUserProfile(userId)),
          map(user => user?.firstName + " " + user.lastName),
          shareReplay(1)
        )
    );
  }

  getBadgesForCourseByUser(courseId : string) :  Observable<UserBadge[]> {
    this.sessionService.getCurrentUser().subscribe(
      result => {
        this.userId = result
      }
    )
    return this.httpService.get(`${environment.backendURI}/api/v2/user/${this.userId}/badgesFromCourse/${courseId}`)
      .pipe(
        map((response:any) =>
        {
          return response as UserBadge[];
        }
      ));
  }

}



import {TestBed} from '@angular/core/testing';

import {UserService} from './user.service';
import {HttpClientTestingModule} from "@angular/common/http/testing";
import {RouterTestingModule} from "@angular/router/testing";

describe('UserService', () => {
  let service: UserService;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule]
    });
    service = TestBed.inject(UserService);
  });

  it('should be created', () => {
    expect(service).toBeTruthy();
  });
});


